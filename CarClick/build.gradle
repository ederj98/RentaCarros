plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'jacoco'
	id "org.sonarqube" version "2.7"
	id 'java'
}

group = 'com.ceiba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.11.2'
	compile group: 'org.springframework', name: 'spring-web', version: '5.2.8.RELEASE'
	compile group: 'org.springframework', name: 'org.springframework.web.servlet', version: '3.2.2.RELEASE'
	compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')
    compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
		
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

jacocoTestReport {
	reports {xml.enabled true}
}

sonarqube {
	properties {
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.sources", "src/main/java"
		property "sonar.java.binaries", "build/classes/java/main"
		property "sonar.tests", "src/test/java"
		property "sonar.test.binaries", "build/classes/java/test"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport.xml"
		property "sonar.junit.reportPaths", "build/test-results/test"
	}
}

